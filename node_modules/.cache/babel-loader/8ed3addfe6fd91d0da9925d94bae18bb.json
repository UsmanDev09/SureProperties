{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Zunaira\\\\Desktop\\\\sure_properties\\\\src\\\\containers\\\\property\\\\SearchProperty.js\";\nimport React, { Fragment, Component } from 'react';\nimport SelectPropertyLocation from './SelectPropertyLocation';\nimport DisplayProperty from './DisplayProperty';\nimport SelectPropertyType from './SelectPropertyType';\nimport SlideShow from '../../containers/SlideShow';\nimport { PropertyData } from '../../PropertyData';\nimport SelectPriceRange from '../../containers/property/SelectPriceRange';\nimport styles from '../../css/SearchProperty.module.css';\nimport AboutUs from '../../containers/AboutUs';\nimport Header from '../../containers/Header';\nimport Slider from '../../containers/Slider';\nimport MapContainer from '../../containers/Maps';\nimport Footer from '../../containers/Footer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass SearchProperty extends Component {\n  // DO THIS USING FUNCTIONAL COMPONENT\n  // USE NEWARRAY AS STATE ARRAY\n  constructor() {\n    super();\n    this.state = {\n      type: {\n        Building: false,\n        House: false,\n        Plot: false,\n        FarmHouse: false\n      },\n      location: {\n        Lahore: false,\n        Islamabad: false,\n        Karachi: false,\n        Peshawar: false\n      },\n      previousToPrice: [],\n      lastChosenProperty: [],\n      lastCheckedCities: [],\n      lastCheckedPrices: [],\n      fromPrice: 0,\n      toPrice: 500000,\n      clicked: false,\n      propertyFound: [],\n      isOpen: false\n    };\n    this.newArray = \"\";\n    this.array = [];\n    this.find = this.find.bind(this);\n    this.findCity = this.findCity.bind(this);\n    this.findPropertyType = this.findPropertyType.bind(this); // this.filterUsingPrice = this.filterUsingPrice.bind(this);\n\n    this.getType = this.getType.bind(this);\n    this.getLocation = this.getLocation.bind(this);\n    this.getToPrice = this.getToPrice.bind(this);\n    this.getFromPrice = this.getFromPrice.bind(this);\n    this.advancedSearch = this.advancedSearch.bind(this);\n    this.toggleMenu = this.toggleMenu.bind(this);\n  }\n  /* const [type,selectType] = useState({\r\n      Building : false,\r\n      House : false,\r\n      Plot : false,\r\n      FarmHouse : false  \r\n    });\r\n    const [location,selectLocation] = useState({\r\n      Building : false,\r\n      House : false,\r\n      Plot : false,\r\n      FarmHouse : false  \r\n  });\r\n    const [clicked,setClicked] = useState(false); */\n  // const [propertyFound,setPropertyFound] = useState([]);\n\n\n  findPropertyType(typeProps) {\n    this.setState({\n      lastChosenProperty: []\n    });\n    this.newArray = [];\n\n    for (let typesChecked in this.state.type) {\n      if (this.state.type[typesChecked] === true) {\n        this.newArray = this.newArray.concat(typesChecked);\n      }\n    }\n\n    this.setState({\n      lastChosenProperty: this.newArray\n    }, () => this.advancedSearch());\n  }\n\n  findCity(locationProps) {\n    this.setState({\n      lastCheckedCities: []\n    });\n    this.newArray = [];\n\n    for (let locationsChecked in this.state.location) if (this.state.location[locationsChecked] === true) {\n      this.newArray = this.newArray.concat(locationsChecked);\n    }\n\n    this.setState({\n      lastCheckedCities: this.newArray\n    }, () => this.advancedSearch());\n  }\n  /*  filterUsingPrice(){\r\n       \r\n       this.newArray = [];\r\n       this.newArray = this.newArray.filter((element) => {\r\n           return (element.price >= this.state.fromPrice && element.price <= this.state.toPrice)\r\n       })\r\n       \r\n   } */\n\n\n  advancedSearch() {\n    if (this.state.lastChosenProperty.length > 0 && this.state.lastCheckedCities.length === 0 && this.state.lastCheckedPrices.length === 0) {\n      let lastChosenPropertyCopy = [...this.state.lastChosenProperty];\n      this.array = [];\n      this.newArray = [];\n      lastChosenPropertyCopy.forEach(element => {\n        this.newArray = PropertyData.filter(item => {\n          return item.propertyType === element;\n        });\n        this.array = this.array.concat(this.newArray);\n      });\n      this.forceUpdate();\n    } else if (this.state.lastCheckedCities.length > 0 && this.state.lastCheckedPrices.length === 0 && this.state.lastChosenProperty.length === 0) {\n      let lastCheckedCitiesCopy = [...this.state.lastCheckedCities];\n      this.array = [];\n      this.newArray = [];\n      lastCheckedCitiesCopy.forEach(element => {\n        this.newArray = PropertyData.filter(item => {\n          return item.location === element;\n        });\n        this.array = this.array.concat(this.newArray);\n      });\n      this.forceUpdate();\n    } else if (this.state.lastCheckedPrices.length > 0 && this.state.lastCheckedCities.length === 0 && this.state.lastChosenProperty.length === 0) {\n      this.array = [];\n      this.array = PropertyData.filter(item => {\n        return item.price >= this.state.fromPrice && item.price <= this.state.toPrice;\n      });\n      this.forceUpdate();\n    } else if (this.state.lastChosenProperty.length > 0 && this.state.lastCheckedCities.length > 0 && this.state.lastCheckedPrices.length === 0) {\n      this.newArray = [];\n      this.array = [];\n      let propertyCopy = [...this.state.lastChosenProperty];\n      let cityCopy = [...this.state.lastCheckedCities];\n      propertyCopy.forEach(element => {\n        this.newArray = this.newArray.concat(PropertyData.filter(item => item.propertyType === element));\n      });\n      cityCopy.forEach(element => {\n        this.array = this.array.concat(this.newArray.filter(item => item.location === element));\n      });\n      this.forceUpdate();\n    } else if (this.state.lastChosenProperty.length > 0 && this.state.lastCheckedCities.length === 0 && this.state.lastCheckedPrices.length > 0) {\n      this.newArray = [];\n      this.array = [];\n      let propertyCopy = [...this.state.lastChosenProperty];\n      propertyCopy.forEach(element => {\n        this.newArray = this.newArray.concat(PropertyData.filter(item => item.propertyType === element));\n      });\n      this.array = this.array.concat(this.newArray.filter(item => {\n        return item.price >= this.state.fromPrice && item.price <= this.state.toPrice;\n      }));\n      this.forceUpdate();\n    } else if (this.state.lastChosenProperty.length === 0 && this.state.lastCheckedCities.length > 0 && this.state.lastCheckedPrices.length > 0) {\n      this.newArray = [];\n      this.array = [];\n      let locationCopy = [...this.state.lastCheckedCities];\n      locationCopy.forEach(element => {\n        this.newArray = this.newArray.concat(PropertyData.filter(item => item.location === element));\n      });\n      this.array = this.array.concat(this.newArray.filter(item => {\n        return item.price >= this.state.fromPrice && item.price <= this.state.toPrice;\n      }));\n      this.forceUpdate();\n    } else if (this.state.lastChosenProperty.length > 0 && this.state.lastCheckedCities.length > 0 && this.state.lastCheckedPrices.length > 0) {\n      this.newArray = [];\n      this.cityArray = [];\n      this.array = [];\n      let propertyCopy = [...this.state.lastChosenProperty];\n      let cityCopy = [...this.state.lastCheckedCities];\n      propertyCopy.forEach(element => {\n        this.newArray = this.newArray.concat(PropertyData.filter(item => item.propertyType === element));\n      });\n      cityCopy.forEach(element => {\n        this.cityArray = this.cityArray.concat(this.newArray.filter(item => item.location === element));\n      });\n      this.array = this.array.concat(this.cityArray.filter(item => item.price >= this.state.fromPrice && item.price <= this.state.toPrice));\n      this.forceUpdate();\n    } else {\n      // when nothing is checked || user unchecks everything\n      this.array = [];\n      this.forceUpdate();\n    }\n  }\n\n  find() {\n    this.findPropertyType();\n    this.findCity();\n    this.filterUsingPrice();\n    let toggle;\n    this.setState({ ...this.state,\n      clicked: !toggle\n    });\n  }\n\n  getType(typeProps) {\n    switch (typeProps) {\n      case 'Building':\n        this.setState({ ...this.state,\n          type: { ...this.state.type,\n            'Building': !this.state.type.Building\n          }\n        }, () => {\n          this.findPropertyType(typeProps);\n        });\n        break;\n\n      case 'House':\n        this.setState({ ...this.state,\n          type: { ...this.state.type,\n            'House': !this.state.type.House\n          }\n        }, () => {\n          this.findPropertyType(typeProps);\n        });\n        break;\n\n      case 'Plot':\n        this.setState({ ...this.state,\n          type: { ...this.state.type,\n            'Plot': !this.state.type.Plot\n          }\n        }, () => {\n          this.findPropertyType(typeProps);\n        });\n        break;\n\n      case 'FarmHouse':\n        this.setState({ ...this.state,\n          type: { ...this.state.type,\n            'FarmHouse': !this.state.type.FarmHouse\n          }\n        }, () => {\n          this.findPropertyType(typeProps);\n        });\n        break;\n\n      default:\n        this.setState({ ...this.state\n        });\n    }\n  }\n\n  getLocation(locationProps) {\n    switch (locationProps) {\n      case 'Lahore':\n        this.setState({ ...this.state,\n          location: { ...this.state.location,\n            'Lahore': !this.state.location.Lahore\n          }\n        }, () => {\n          this.findCity(locationProps);\n        });\n        break;\n\n      case 'Islamabad':\n        this.setState({ ...this.state,\n          location: { ...this.state.location,\n            'Islamabad': !this.state.location.Islamabad\n          }\n        }, () => {\n          this.findCity(locationProps);\n        });\n        break;\n\n      case 'Karachi':\n        this.setState({ ...this.state,\n          location: { ...this.state.location,\n            'Karachi': !this.state.location.Karachi\n          }\n        }, () => {\n          this.findCity(locationProps);\n        });\n        break;\n\n      case 'Peshawar':\n        this.setState({ ...this.state,\n          location: { ...this.state.location,\n            'Peshawar': !this.state.location.Peshawar\n          }\n        }, () => {\n          this.findCity(locationProps);\n        });\n        break;\n\n      default:\n        this.setState({ ...this.state\n        });\n    }\n  }\n\n  getFromPrice(from) {\n    if (this.state.previousFromPrice === from) {\n      this.setState({\n        fromPrice: \"\",\n        previousFromPrice: \"\",\n        lastCheckedPrices: []\n      }, () => this.advancedSearch());\n    } else {\n      this.setState({\n        fromPrice: from,\n        previousFromPrice: from,\n        lastCheckedPrices: from\n      });\n    }\n  }\n\n  getToPrice(to) {\n    let from = [...this.state.lastCheckedPrices];\n\n    if (this.state.previousToPrice === to) {\n      this.setState({\n        toPrice: \"\",\n        previousToPrice: \"\",\n        lastCheckedPrices: []\n      }, () => this.advancedSearch());\n    } else {\n      this.setState({\n        previousToPrice: to,\n        toPrice: to,\n        lastCheckedPrices: from.concat(to)\n      }, () => {\n        this.advancedSearch();\n      });\n    }\n  }\n\n  toggleMenu() {\n    let nav = document.querySelector(\"nav\");\n    let logo = document.querySelector(\".logo\");\n    let search = document.querySelector(\"#search\");\n    let after = document.querySelector('div', '::before');\n\n    if (this.state.isOpen === false) {\n      this.setState({\n        isOpen: true\n      });\n      nav.style.display = \"block\";\n      logo.style.display = \"none\";\n      search.style.display = \"none\";\n    } else {\n      this.setState({\n        isOpen: false\n      });\n      nav.style.display = \"none\";\n      logo.style.display = \"block\";\n      search.style.display = \"flex\";\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"searchh\",\n        children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 436,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.wrapper,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"slider\",\n            style: {\n              height: \"100%\",\n              position: \"relative\",\n              bottom: \"20px\"\n            },\n            children: /*#__PURE__*/_jsxDEV(SlideShow, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 439,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 438,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 437,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          id: \"about-us\",\n          style: {\n            marginTop: \"0px\",\n            marginLeft: \"5%\",\n            marginBottom: \"0\",\n            fontFamily: \"'Cinzel',serif\",\n            fontSize: \"2em\",\n            textAlign: \"left\",\n            fontFamily: \"'Cinzel',serif\"\n          },\n          children: \"About Us\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 469,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"about-us\",\n          style: {\n            width: \"100%\",\n            margin: \"30px 0\",\n            marginBottom: \"100px\"\n          },\n          children: /*#__PURE__*/_jsxDEV(AboutUs, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 471,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 470,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          id: \"contact\",\n          style: {\n            marginTop: \"50px\",\n            marginLeft: \"5%\",\n            marginBottom: \"0\",\n            fontFamily: \"'Cinzel',serif\",\n            fontSize: \"2em\",\n            textAlign: \"left\",\n            fontFamily: \"'Cinzel',serif\"\n          },\n          children: \"Contact Us\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 476,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"contact-us\",\n          style: {\n            height: \"400px\",\n            width: \"100%\",\n            margin: \"30px 0\",\n            marginBottom: \"100px\"\n          },\n          children: /*#__PURE__*/_jsxDEV(MapContainer, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 478,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 477,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: \"100px\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 482,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 481,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 434,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default SearchProperty;","map":{"version":3,"sources":["C:/Users/Zunaira/Desktop/sure_properties/src/containers/property/SearchProperty.js"],"names":["React","Fragment","Component","SelectPropertyLocation","DisplayProperty","SelectPropertyType","SlideShow","PropertyData","SelectPriceRange","styles","AboutUs","Header","Slider","MapContainer","Footer","SearchProperty","constructor","state","type","Building","House","Plot","FarmHouse","location","Lahore","Islamabad","Karachi","Peshawar","previousToPrice","lastChosenProperty","lastCheckedCities","lastCheckedPrices","fromPrice","toPrice","clicked","propertyFound","isOpen","newArray","array","find","bind","findCity","findPropertyType","getType","getLocation","getToPrice","getFromPrice","advancedSearch","toggleMenu","typeProps","setState","typesChecked","concat","locationProps","locationsChecked","length","lastChosenPropertyCopy","forEach","element","filter","item","propertyType","forceUpdate","lastCheckedCitiesCopy","price","propertyCopy","cityCopy","locationCopy","cityArray","filterUsingPrice","toggle","from","previousFromPrice","to","nav","document","querySelector","logo","search","after","style","display","render","wrapper","height","position","bottom","marginTop","marginLeft","marginBottom","fontFamily","fontSize","textAlign","width","margin"],"mappings":"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","sourcesContent":["import React, {Fragment,Component} from 'react';\r\nimport SelectPropertyLocation from './SelectPropertyLocation';\r\nimport DisplayProperty from './DisplayProperty';\r\nimport SelectPropertyType from './SelectPropertyType';\r\nimport SlideShow from '../../containers/SlideShow';\r\nimport {PropertyData} from '../../PropertyData';\r\nimport SelectPriceRange from '../../containers/property/SelectPriceRange';\r\nimport styles from '../../css/SearchProperty.module.css';\r\nimport AboutUs from '../../containers/AboutUs';\r\nimport Header from '../../containers/Header'\r\nimport Slider from '../../containers/Slider';\r\nimport MapContainer from '../../containers/Maps';\r\nimport Footer from '../../containers/Footer';\r\n\r\n  \r\nclass SearchProperty extends Component{\r\n\r\n// DO THIS USING FUNCTIONAL COMPONENT\r\n// USE NEWARRAY AS STATE ARRAY\r\n\r\nconstructor(){\r\n    super();\r\n    this.state = {\r\n        type: {\r\n            Building: false,\r\n            House : false,\r\n            Plot : false,\r\n            FarmHouse : false,\r\n        },\r\n        location : {\r\n            Lahore : false,\r\n            Islamabad : false,\r\n            Karachi : false,\r\n            Peshawar : false\r\n        },\r\n        previousToPrice : [],\r\n        lastChosenProperty : [],\r\n        lastCheckedCities : [],\r\n        lastCheckedPrices : [],\r\n        fromPrice : 0,\r\n        toPrice : 500000,\r\n        clicked : false,\r\n        propertyFound: [],\r\n        isOpen : false\r\n    }\r\n    \r\n    this.newArray =\"\";\r\n    this.array = [];\r\n    this.find = this.find.bind(this);\r\n    this.findCity = this.findCity.bind(this);\r\n    this.findPropertyType = this.findPropertyType.bind(this);\r\n    // this.filterUsingPrice = this.filterUsingPrice.bind(this);\r\n    this.getType = this.getType.bind(this);\r\n    this.getLocation = this.getLocation.bind(this);\r\n    this.getToPrice = this.getToPrice.bind(this);\r\n    this.getFromPrice = this.getFromPrice.bind(this);\r\n    this.advancedSearch = this.advancedSearch.bind(this);\r\n    this.toggleMenu = this.toggleMenu.bind(this);\r\n}\r\n\r\n    /* const [type,selectType] = useState({\r\n        Building : false,\r\n        House : false,\r\n        Plot : false,\r\n        FarmHouse : false  \r\n      });\r\n\r\n    const [location,selectLocation] = useState({\r\n        Building : false,\r\n        House : false,\r\n        Plot : false,\r\n        FarmHouse : false  \r\n    });\r\n\r\n    const [clicked,setClicked] = useState(false); */\r\n    \r\n     \r\n    // const [propertyFound,setPropertyFound] = useState([]);\r\n    \r\n    findPropertyType(typeProps){\r\n       \r\n        this.setState({\r\n            lastChosenProperty : []\r\n        })\r\n\r\n        this.newArray = [];\r\n        for(let typesChecked in this.state.type){\r\n            if(this.state.type[typesChecked] === true ){\r\n                this.newArray = this.newArray.concat(typesChecked);       \r\n            }\r\n        }\r\n        \r\n        this.setState({\r\n           lastChosenProperty: this.newArray\r\n        },() => this.advancedSearch())\r\n       \r\n    }\r\n\r\n    findCity(locationProps){\r\n\r\n        this.setState({\r\n            lastCheckedCities : []\r\n        })\r\n\r\n        this.newArray = [];\r\n        for(let locationsChecked in this.state.location)\r\n            if(this.state.location[locationsChecked] === true ){   \r\n                this.newArray = this.newArray.concat(locationsChecked)\r\n            }\r\n        \r\n        this.setState({\r\n            lastCheckedCities : this.newArray       \r\n        },() => this.advancedSearch())\r\n\r\n    }        \r\n   \r\n   /*  filterUsingPrice(){\r\n        \r\n        this.newArray = [];\r\n        this.newArray = this.newArray.filter((element) => {\r\n            return (element.price >= this.state.fromPrice && element.price <= this.state.toPrice)\r\n        })\r\n        \r\n    } */\r\n\r\n    advancedSearch(){\r\n      \r\n        if(this.state.lastChosenProperty.length > 0 && this.state.lastCheckedCities.length === 0 && this.state.lastCheckedPrices.length === 0){\r\n            let lastChosenPropertyCopy =[...this.state.lastChosenProperty];\r\n            this.array = []\r\n            this.newArray = []\r\n            \r\n            lastChosenPropertyCopy.forEach(element => {\r\n                this.newArray = PropertyData.filter((item) => {\r\n                    return item.propertyType === element\r\n                })\r\n                this.array = this.array.concat(this.newArray);\r\n            });\r\n\r\n            this.forceUpdate();\r\n          \r\n        }else if(this.state.lastCheckedCities.length > 0 && this.state.lastCheckedPrices.length === 0 && this.state.lastChosenProperty.length === 0){\r\n            let lastCheckedCitiesCopy =[...this.state.lastCheckedCities];\r\n            this.array = []\r\n            this.newArray = []\r\n\r\n            lastCheckedCitiesCopy.forEach(element => {\r\n                this.newArray = PropertyData.filter((item) => {\r\n                    return item.location === element\r\n                })\r\n                this.array = this.array.concat(this.newArray);\r\n            });\r\n           \r\n            this.forceUpdate();\r\n        }else if(this.state.lastCheckedPrices.length > 0 && this.state.lastCheckedCities.length === 0 && this.state.lastChosenProperty.length === 0 ){\r\n            \r\n            this.array = []\r\n     \r\n       \r\n                this.array = PropertyData.filter((item) => {\r\n                    return (item.price >= this.state.fromPrice && item.price <= this.state.toPrice)\r\n                    \r\n                }            \r\n                )\r\n                this.forceUpdate();\r\n        \r\n        }else if(this.state.lastChosenProperty.length > 0 && this.state.lastCheckedCities.length > 0 && this.state.lastCheckedPrices.length === 0){\r\n            this.newArray = []\r\n            this.array = []\r\n            let propertyCopy = [...this.state.lastChosenProperty];\r\n            let cityCopy = [...this.state.lastCheckedCities];\r\n            propertyCopy.forEach((element) => {\r\n                this.newArray = this.newArray.concat(PropertyData.filter(item => item.propertyType === element))\r\n            })\r\n            \r\n            \r\n            cityCopy.forEach((element) => {\r\n                this.array = this.array.concat(this.newArray.filter(item => item.location === element))\r\n            })\r\n           \r\n            \r\n            this.forceUpdate();\r\n        }else if(this.state.lastChosenProperty.length > 0 && this.state.lastCheckedCities.length === 0 && this.state.lastCheckedPrices.length > 0){\r\n            this.newArray = []\r\n            this.array = []\r\n            let propertyCopy = [...this.state.lastChosenProperty];\r\n            \r\n            propertyCopy.forEach((element) => {\r\n                this.newArray = this.newArray.concat(PropertyData.filter(item => item.propertyType === element))\r\n            })\r\n            \r\n           this.array = this.array.concat(this.newArray.filter((item) => {\r\n                return item.price >= this.state.fromPrice && item.price <= this.state.toPrice\r\n           }))\r\n            \r\n            this.forceUpdate();\r\n        }else if(this.state.lastChosenProperty.length === 0 && this.state.lastCheckedCities.length > 0 && this.state.lastCheckedPrices.length > 0){\r\n            this.newArray = []\r\n            this.array = []\r\n            let locationCopy = [...this.state.lastCheckedCities];\r\n            \r\n            locationCopy.forEach((element) => {\r\n                this.newArray = this.newArray.concat(PropertyData.filter(item => item.location === element))\r\n            })\r\n    \r\n            \r\n            \r\n           this.array = this.array.concat(this.newArray.filter((item) => {\r\n                return item.price >= this.state.fromPrice && item.price <= this.state.toPrice\r\n           }))\r\n            \r\n            this.forceUpdate();\r\n        }else if(this.state.lastChosenProperty.length > 0 && this.state.lastCheckedCities.length > 0 && this.state.lastCheckedPrices.length > 0){\r\n            this.newArray = []\r\n            this.cityArray = []\r\n            this.array = []\r\n            let propertyCopy = [...this.state.lastChosenProperty];\r\n            let cityCopy = [...this.state.lastCheckedCities];\r\n            propertyCopy.forEach((element) => {\r\n                this.newArray = this.newArray.concat(PropertyData.filter(item => item.propertyType === element))\r\n            })\r\n        \r\n            cityCopy.forEach((element) => {\r\n                this.cityArray = this.cityArray.concat(this.newArray.filter(item => item.location === element))\r\n            })\r\n           \r\n                this.array = this.array.concat(this.cityArray.filter(item => (item.price >= this.state.fromPrice && item.price <= this.state.toPrice)))\r\n\r\n            \r\n            this.forceUpdate();\r\n        }\r\n        else{ // when nothing is checked || user unchecks everything\r\n            this.array = [];\r\n            this.forceUpdate();\r\n        }\r\n    }\r\n\r\n\r\n\r\n    find(){\r\n        this.findPropertyType();\r\n        this.findCity();\r\n        this.filterUsingPrice();\r\n        let toggle;\r\n        this.setState({\r\n            ...this.state,   \r\n            clicked: !toggle,\r\n            \r\n        })\r\n    }\r\n    \r\n     getType(typeProps){\r\n        \r\n        switch(typeProps){\r\n            case('Building'):\r\n          \r\n                this.setState({\r\n                    ...this.state,\r\n                    type: {\r\n                    ...this.state.type, \r\n                    'Building':!this.state.type.Building\r\n                }},()=>{\r\n                    this.findPropertyType(typeProps)\r\n                   \r\n                })\r\n                \r\n                break;\r\n            case('House'):\r\n                this.setState({\r\n                    ...this.state,\r\n                    type:{ \r\n                    ...this.state.type, \r\n                    'House':!this.state.type.House\r\n                }},()=>{\r\n                    this.findPropertyType(typeProps)\r\n                   \r\n                })\r\n               \r\n                break;\r\n            case('Plot'):\r\n                this.setState({\r\n                    ...this.state,\r\n                    type:{\r\n                    ...this.state.type, \r\n                    'Plot':!this.state.type.Plot\r\n                }},()=>{\r\n                    this.findPropertyType(typeProps)\r\n                  \r\n                })\r\n                break;\r\n            case('FarmHouse'):\r\n                \r\n                this.setState({\r\n                    ...this.state,\r\n                    type:{\r\n                    ...this.state.type, \r\n                    'FarmHouse':!this.state.type.FarmHouse\r\n                }},()=>{\r\n                    this.findPropertyType(typeProps)\r\n                  \r\n                })\r\n                break;\r\n            default:\r\n                this.setState({...this.state})\r\n        }\r\n       \r\n    }\r\n    \r\n    getLocation(locationProps){\r\n      \r\n        switch(locationProps){\r\n            case('Lahore'):\r\n                this.setState({\r\n                    ...this.state,\r\n                    location:{\r\n                    ...this.state.location, \r\n                    'Lahore':!this.state.location.Lahore\r\n                }},()=>{\r\n                    this.findCity(locationProps)\r\n                  \r\n                })\r\n                break;\r\n\r\n            case('Islamabad'):\r\n                this.setState({\r\n                    ...this.state,\r\n                    location:{\r\n                    ...this.state.location, \r\n                    'Islamabad':!this.state.location.Islamabad\r\n                }},()=>{\r\n                    this.findCity(locationProps)\r\n                   \r\n                })\r\n                break;\r\n\r\n            case('Karachi'):\r\n                this.setState({\r\n                    ...this.state,\r\n                    location:{\r\n                    ...this.state.location, \r\n                    'Karachi':!this.state.location.Karachi\r\n                }},()=>{\r\n                    this.findCity(locationProps)\r\n                \r\n                })\r\n                break;\r\n\r\n            case('Peshawar'):\r\n                this.setState({\r\n                    ...this.state,\r\n                    location:{\r\n                    ...this.state.location, \r\n                    'Peshawar':!this.state.location.Peshawar\r\n                }},()=>{\r\n                    this.findCity(locationProps)\r\n                   \r\n                })\r\n                break;\r\n                \r\n            default:\r\n                this.setState({...this.state})\r\n        }\r\n      \r\n    \r\n        }\r\n\r\n        getFromPrice(from){\r\n            if(this.state.previousFromPrice === from){\r\n                this.setState({\r\n                    fromPrice : \"\",\r\n                    previousFromPrice : \"\",\r\n                    lastCheckedPrices : []\r\n                },() => this.advancedSearch())\r\n            }else{\r\n                this.setState({\r\n                    fromPrice :from,\r\n                    previousFromPrice : from,\r\n                    lastCheckedPrices :from\r\n                })\r\n            }   \r\n         \r\n           \r\n        }\r\n\r\n        getToPrice(to){\r\n            let from = [...this.state.lastCheckedPrices]\r\n            if(this.state.previousToPrice === to){\r\n                this.setState({\r\n                    toPrice : \"\",\r\n                    previousToPrice : \"\",\r\n                    lastCheckedPrices : []\r\n                },() => this.advancedSearch())\r\n            }else{\r\n                this.setState({\r\n                    previousToPrice : to,\r\n                    toPrice:to,\r\n                    lastCheckedPrices : from.concat(to)\r\n                },()=>{\r\n                    this.advancedSearch()\r\n                \r\n                })\r\n            }   \r\n           \r\n          \r\n         }\r\n\r\n        toggleMenu(){\r\n            let nav = document.querySelector(\"nav\");\r\n            let logo = document.querySelector(\".logo\");\r\n            let search = document.querySelector(\"#search\")\r\n            let after = document.querySelector('div', '::before');\r\n            if(this.state.isOpen === false){\r\n                this.setState({\r\n                    isOpen : true\r\n                })\r\n                nav.style.display = \"block\";\r\n                logo.style.display = \"none\";\r\n                search.style.display = \"none\";\r\n                \r\n            }else{\r\n                this.setState({\r\n                    isOpen: false\r\n                })\r\n                nav.style.display = \"none\";\r\n                logo.style.display = \"block\";\r\n                search.style.display = \"flex\";\r\n            }\r\n        }\r\n\r\n       \r\n       \r\n    render(){\r\n    return(\r\n        <Fragment >\r\n        <div id =\"searchh\">\r\n        <Header></Header>\r\n        <div className = {styles.wrapper}>  \r\n        <div className = \"slider\" style = {{height:\"100%\",position:\"relative\",bottom:\"20px\"}}>\r\n            <SlideShow></SlideShow>\r\n        </div>\r\n            {/* <div style = {{height:\"300px\",width:\"90%\"}}>\r\n                \r\n                <div className  ={styles.padding}>\r\n                <h4 className= \"search-property\" style = {{fontFamily:\"'Cinzel',serif\",fontWeight:\"500\"}}> Search Property</h4>\r\n                </div>\r\n                \r\n                \r\n                <div className = {styles.search} id =\"search\">\r\n                    \r\n                    <SelectPropertyType getType = {(typeProps) => this.getType(typeProps)} ></SelectPropertyType>\r\n                    \r\n                    <SelectPropertyLocation getLocation = {(locationProps) => this.getLocation(locationProps)}/>\r\n                    \r\n                    <SelectPriceRange getFromPrice = {(from) => this.getFromPrice(from)}  getToPrice = {(to) => this.getToPrice(to)}></SelectPriceRange>\r\n                    \r\n                   \r\n                    \r\n                  </div>\r\n                  \r\n            </div> */}\r\n            {/* <DisplayProperty  data = {this.array}  ></DisplayProperty>    */}\r\n           \r\n         </div>  \r\n         {/* <div id = \"featured\"> \r\n\r\n             <h4 style = {{marginTop:\"50px\",fontFamily:\"'Cinzel',serif\",fontWeight:\"500\"}}>Featured Adds</h4>\r\n         <Slider></Slider>\r\n         </div> */}\r\n        <h1 id = \"about-us\" style = {{marginTop: \"0px\", marginLeft: \"5%\", marginBottom:\"0\", fontFamily:\"'Cinzel',serif\", fontSize: \"2em\", textAlign: \"left\", fontFamily:\"'Cinzel',serif\"}}>About Us</h1>\r\n        <div id = \"about-us\"style = {{width:\"100%\",margin:\"30px 0\",marginBottom: \"100px\"}}>\r\n            <AboutUs></AboutUs>\r\n        </div> \r\n\r\n\r\n\r\n        <h1 id = \"contact\" style = {{marginTop: \"50px\", marginLeft: \"5%\", marginBottom:\"0\", fontFamily:\"'Cinzel',serif\", fontSize: \"2em\", textAlign: \"left\", fontFamily:\"'Cinzel',serif\"}}>Contact Us</h1>\r\n        <div id = \"contact-us\"style = {{height:\"400px\",width:\"100%\",margin:\"30px 0\",marginBottom: \"100px\"}}>\r\n            <MapContainer></MapContainer>\r\n        </div>\r\n\r\n        <div style = {{marginTop:\"100px\"}}>\r\n        <Footer></Footer>\r\n        </div>\r\n        </div>\r\n        </Fragment>\r\n        )\r\n    }\r\n}\r\nexport default SearchProperty;\r\n"]},"metadata":{},"sourceType":"module"}