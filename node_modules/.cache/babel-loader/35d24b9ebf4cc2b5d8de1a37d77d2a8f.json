{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Zunaira\\\\Desktop\\\\sure_properties\\\\src\\\\containers\\\\SlideShow.js\";\nimport Carousel from 'react-material-ui-carousel';\nimport { Paper, Button } from '@material-ui/core';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Item(props) {\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    style: {\n      width: \"100vw\",\n      height: \"80vh\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: props.item.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: props.item.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      className: \"CheckButton\",\n      children: \"Check it out!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n}\n\n_c = Item;\n\nfunction SlideShow() {\n  var items = [{}, {}];\n  return /*#__PURE__*/_jsxDEV(Carousel, {\n    NextIcon: /*#__PURE__*/_jsxDEV(ArrowForwardIosIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 15\n    }, this),\n    PrevIcon: /*#__PURE__*/_jsxDEV(ArrowForwardIosIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 15\n    }, this),\n    navButtonsAlwaysVisible: true,\n    fullHeightHover: true // We want the nav buttons wrapper to only be as big as the button element is\n    ,\n    navButtonsProps: {\n      // Change the colors and radius of the actual buttons. THIS STYLES BOTH BUTTONS\n      style: {\n        buttonWrapper: {\n          position: \"absolute\",\n          height: \"100px\",\n          backgroundColor: \"transparent\",\n          top: \"calc(50% - 70px)\",\n          '&:hover': {\n            '& $button': {\n              backgroundColor: \"black\",\n              filter: \"brightness(120%)\",\n              opacity: \"0.4\"\n            }\n          }\n        },\n        fullHeightHoverWrapper: {\n          height: \"100%\",\n          top: \"0\"\n        },\n        buttonVisible: {\n          opacity: \"1\"\n        },\n        buttonHidden: {\n          opacity: \"0\"\n        },\n        button: {\n          margin: \"0 10px\",\n          position: \"relative\",\n          backgroundColor: \"#494949\",\n          top: \"calc(50% - 20px) !important\",\n          color: \"white\",\n          fontSize: \"30px\",\n          transition: \"200ms\",\n          cursor: \"pointer\",\n          '&:hover': {\n            opacity: \"0.6 !important\"\n          }\n        },\n        // Applies to the \"next\" button wrapper\n        next: {\n          right: 0\n        },\n        // Applies to the \"prev\" button wrapper\n        prev: {\n          left: 0\n        },\n        backgroundColor: 'cornflowerblue',\n        borderRadius: 0\n      }\n    },\n    children: items.map((item, i) => /*#__PURE__*/_jsxDEV(Item, {\n      item: item\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 45\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 13\n  }, this);\n}\n\n_c2 = SlideShow;\nexport default SlideShow;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Item\");\n$RefreshReg$(_c2, \"SlideShow\");","map":{"version":3,"sources":["C:/Users/Zunaira/Desktop/sure_properties/src/containers/SlideShow.js"],"names":["Carousel","Paper","Button","ArrowForwardIosIcon","Item","props","width","height","item","name","description","SlideShow","items","style","buttonWrapper","position","backgroundColor","top","filter","opacity","fullHeightHoverWrapper","buttonVisible","buttonHidden","button","margin","color","fontSize","transition","cursor","next","right","prev","left","borderRadius","map","i"],"mappings":";AAAA,OAAOA,QAAP,MAAqB,4BAArB;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,mBAA9B;AACA,OAAOC,mBAAP,MAAgC,oCAAhC;;;AACA,SAASC,IAAT,CAAcC,KAAd,EACA;AACI,sBACI,QAAC,KAAD;AAAO,IAAA,KAAK,EAAI;AAACC,MAAAA,KAAK,EAAC,OAAP;AAAeC,MAAAA,MAAM,EAAC;AAAtB,KAAhB;AAAA,4BACI;AAAA,gBAAKF,KAAK,CAACG,IAAN,CAAWC;AAAhB;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,gBAAIJ,KAAK,CAACG,IAAN,CAAWE;AAAf;AAAA;AAAA;AAAA;AAAA,YAFJ,eAII,QAAC,MAAD;AAAQ,MAAA,SAAS,EAAC,aAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH;;KAZQN,I;;AAcT,SAASO,SAAT,GAAoB;AAEZ,MAAIC,KAAK,GAAG,CACR,EADQ,EAIR,EAJQ,CAAZ;AASA,sBACI,QAAC,QAAD;AACR,IAAA,QAAQ,eAAE,QAAC,mBAAD;AAAA;AAAA;AAAA;AAAA,YADF;AAER,IAAA,QAAQ,eAAE,QAAC,mBAAD;AAAA;AAAA;AAAA;AAAA,YAFF;AAGR,IAAA,uBAAuB,EAAI,IAHnB;AAIR,IAAA,eAAe,EAAE,IAJT,CAImB;AAJnB;AAKR,IAAA,eAAe,EAAE;AAAW;AACxBC,MAAAA,KAAK,EAAE;AACHC,QAAAA,aAAa,EAAE;AACXC,UAAAA,QAAQ,EAAE,UADC;AAEXR,UAAAA,MAAM,EAAE,OAFG;AAGXS,UAAAA,eAAe,EAAE,aAHN;AAIXC,UAAAA,GAAG,EAAE,kBAJM;AAKX,qBAAW;AACP,yBAAa;AACTD,cAAAA,eAAe,EAAE,OADR;AAETE,cAAAA,MAAM,EAAE,kBAFC;AAGTC,cAAAA,OAAO,EAAE;AAHA;AADN;AALA,SADZ;AAcHC,QAAAA,sBAAsB,EAAE;AACpBb,UAAAA,MAAM,EAAE,MADY;AAEpBU,UAAAA,GAAG,EAAE;AAFe,SAdrB;AAkBHI,QAAAA,aAAa,EAAC;AACVF,UAAAA,OAAO,EAAE;AADC,SAlBX;AAqBHG,QAAAA,YAAY,EAAC;AACTH,UAAAA,OAAO,EAAE;AADA,SArBV;AAwBHI,QAAAA,MAAM,EAAE;AACJC,UAAAA,MAAM,EAAE,QADJ;AAEJT,UAAAA,QAAQ,EAAE,UAFN;AAGJC,UAAAA,eAAe,EAAE,SAHb;AAIJC,UAAAA,GAAG,EAAE,6BAJD;AAKJQ,UAAAA,KAAK,EAAE,OALH;AAMJC,UAAAA,QAAQ,EAAE,MANN;AAOJC,UAAAA,UAAU,EAAE,OAPR;AAQJC,UAAAA,MAAM,EAAE,SARJ;AASJ,qBAAW;AACPT,YAAAA,OAAO,EAAE;AADF;AATP,SAxBL;AAqCH;AACAU,QAAAA,IAAI,EAAE;AACFC,UAAAA,KAAK,EAAE;AADL,SAtCH;AAyCH;AACAC,QAAAA,IAAI,EAAE;AACFC,UAAAA,IAAI,EAAE;AADJ,SA1CH;AA6CHhB,QAAAA,eAAe,EAAE,gBA7Cd;AA8CHiB,QAAAA,YAAY,EAAE;AA9CX;AADM,KALT;AAAA,cA6DQrB,KAAK,CAACsB,GAAN,CAAW,CAAC1B,IAAD,EAAO2B,CAAP,kBAAa,QAAC,IAAD;AAAc,MAAA,IAAI,EAAE3B;AAApB,OAAW2B,CAAX;AAAA;AAAA;AAAA;AAAA,YAAxB;AA7DR;AAAA;AAAA;AAAA;AAAA,UADJ;AAmEP;;MA9EQxB,S;AAgFT,eAAeA,SAAf","sourcesContent":["import Carousel from 'react-material-ui-carousel';\r\nimport { Paper, Button } from '@material-ui/core';\r\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\r\nfunction Item(props)\r\n{\r\n    return (\r\n        <Paper style = {{width:\"100vw\",height:\"80vh\"}}>\r\n            <h2>{props.item.name}</h2>\r\n            <p>{props.item.description}</p>\r\n\r\n            <Button className=\"CheckButton\">\r\n                Check it out!\r\n            </Button>\r\n        </Paper>\r\n    )\r\n}\r\n\r\nfunction SlideShow(){\r\n  \r\n        var items = [\r\n            {\r\n               \r\n            },\r\n            {\r\n             \r\n            }\r\n        ]\r\n    \r\n        return (\r\n            <Carousel\r\n    NextIcon={<ArrowForwardIosIcon/>}\r\n    PrevIcon={<ArrowForwardIosIcon/>}\r\n    navButtonsAlwaysVisible = {true}\r\n    fullHeightHover={true}     // We want the nav buttons wrapper to only be as big as the button element is\r\n    navButtonsProps={{          // Change the colors and radius of the actual buttons. THIS STYLES BOTH BUTTONS\r\n        style: {\r\n            buttonWrapper: {\r\n                position: \"absolute\",\r\n                height: \"100px\",\r\n                backgroundColor: \"transparent\",\r\n                top: \"calc(50% - 70px)\",\r\n                '&:hover': {\r\n                    '& $button': {\r\n                        backgroundColor: \"black\",\r\n                        filter: \"brightness(120%)\",\r\n                        opacity: \"0.4\"\r\n                    }\r\n                }\r\n            },\r\n            fullHeightHoverWrapper: {\r\n                height: \"100%\",\r\n                top: \"0\"\r\n            },\r\n            buttonVisible:{\r\n                opacity: \"1\"\r\n            },\r\n            buttonHidden:{\r\n                opacity: \"0\",\r\n            },\r\n            button: {\r\n                margin: \"0 10px\",\r\n                position: \"relative\",\r\n                backgroundColor: \"#494949\",\r\n                top: \"calc(50% - 20px) !important\",\r\n                color: \"white\",\r\n                fontSize: \"30px\",\r\n                transition: \"200ms\",\r\n                cursor: \"pointer\",\r\n                '&:hover': {\r\n                    opacity: \"0.6 !important\"\r\n                },\r\n            },\r\n            // Applies to the \"next\" button wrapper\r\n            next: {\r\n                right: 0\r\n            },\r\n            // Applies to the \"prev\" button wrapper\r\n            prev: {\r\n                left: 0\r\n            },\r\n            backgroundColor: 'cornflowerblue',\r\n            borderRadius: 0\r\n        }\r\n           \r\n        \r\n    }} \r\n   \r\n  \r\n    >\r\n                {\r\n                    items.map( (item, i) => <Item key={i} item={item} /> )\r\n                }\r\n            </Carousel>\r\n        )\r\n\r\n}\r\n\r\nexport default SlideShow;"]},"metadata":{},"sourceType":"module"}